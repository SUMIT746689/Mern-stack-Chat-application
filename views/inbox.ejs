<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="author" content="Sumit Saha" />
    <meta name="owner" content="learnwithsumit.com" />
    <title>Inbox</title>
    <link rel="shortcut icon" href="./images/favicon.png" />
    <link rel="stylesheet" href="./stylesheets/toastify.css" />
    <link rel="stylesheet" href="./stylesheets/style.css" />
    <script src="./js/toastify.js"></script>
  </head>
  <body>
    <%- include('./partials/nav.ejs')%>
    <div id="chat-container">
      <div id="search-container">
        <input type="text" placeholder="Search" />
      </div>
      
      <div id="conversation-list">
        <% responseMessage.forEach((value)=>{%>
        <div class="conversation conversation-<%= value._id%>" onclick="conversation('<%=value._id%>')" >
          <%if(value.perticipent_avatar){ %>
            <img src= "<%=`./avatars/${value.perticipent_avatar}`%>" alt="Sumit" />
          <% }else{ %>
            <img src="./images/user1.png" alt="Sumit" />
          <% } %>
          <div class="title-text">Sumit Saha</div>
          <di class="created-date"> Apr 16 </di>
          <div class="conversation-message">This is a message</div>
        </div>
        <% }) %>
      </div>
      <div id="new-message-container">
        <a href="#" style="font-size: 5rem;text-decoration: none;padding-left: 35%;color: aliceblue;">
          +
        </a>
      </div>
      <div id="chat-title">
        <span>Sumit</span>
        <img src="./images/trash.png" alt="Delete Conversation" />
      </div>
      <div id="chat-message-list">
        <div class="message-row other-message">
          <div class="message-content">
            <img src="./images/user1.png" alt="Sumit" />
            <div class="message-text">Ok then</div>
            <div class="message-time">Apr 16</div>
          </div>
        </div>
        <div class="message-row you-message">
          <div class="message-content">
            <div class="message-text">Lorem ipsum dolor sit amet</div>
            <div class="message-time">Apr 16</div>
          </div>
        </div>
      </div>
      <form id="chat-form">
        <!-- <img src="./images/attachment.png" inputmode="file" type="file" alt=Add Attachment=""/> -->
        <input type="file" style="width: 100%" name="avatar" />
        <input name="message" id="chat-message" type="text" placeholder="Type a message" />
      </form>
    </div>

    <!--new conversation create-->
    <div class="modal-wrapper">
      <div class="modal">
        <a href="#" class="modal-close">+</a>
        <div class="modal-title">
          <h2>Create New Conversation</h2>
        </div>
        <div class="modal-body">
          <form id='modal-wrapper-form'>
            <input type="text" id="modal-wrapper-form-input" name="username" placeholder="Username" />
            <!--Search Items show-->
            <div id="modal-wrapper-form-input-search">

            </div>
            <input type="submit" value="Submit" />
          </form>
        </div>
      </div>
    </div>

    <script src="https://cdn.socket.io/4.4.1/socket.io.min.js" integrity="sha384-fKnu0iswBIqkjxrhQCTZ7qlLHOFEgNkRmK2vaO/LbTZSXdJfAu6ewRBdwHPhBo/H" crossorigin="anonymous"></script>
    <script>
    
    const newMessageContainer = document.querySelector('#new-message-container');
    const modalWrapper = document.querySelector('.modal-wrapper');
    const closeModal = document.querySelector('.modal-close');
    const modalWrapperForm = document.querySelector('#modal-wrapper-form');
    const modalWrapperFormInput = document.querySelector('#modal-wrapper-form-input');
    const modalWrapperFormInputSearch = document.querySelector('#modal-wrapper-form-input-search');
    const chatForm = document.querySelector('#chat-form');
    
    let noOfRequestOnPerClick = 1 ;
    let conversationId ; 
    //show modal wrapper for create new conversion
    newMessageContainer.addEventListener('click',()=>{
      modalWrapper.style.display = 'block'
    })
    //close modal wrapper click handle
    closeModal.addEventListener('click',()=>{
      modalWrapper.style.display = 'none'
    })

    //create a coversation form submit handle
    modalWrapperForm.addEventListener('submit',async (e)=>{
      e.preventDefault();
      let responseData ;

      //fetch users by search from server 
      await fetch('/inbox',{
        method : 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body : JSON.stringify({input:modalWrapperFormInput.value})
      })
      .then((data)=>data.json())
      .then((data)=>{
        responseData = data ;
        console.log(data);
      })
      .catch((err)=>{console.log(err)})
      //set 
      modalWrapperFormInputSearch.innerHTML =''
      if(responseData !== undefined){
        responseData.forEach((value)=>{
          console.log(value);
          modalWrapperFormInputSearch.innerHTML = modalWrapperFormInputSearch.innerHTML + `<p onclick=userCreateConversion('${value._id}')> ${value.name} </p>` ;
        
        })
      }
    });
    
    //Every user p tag handle
    async function userCreateConversion(id){
      if(noOfRequestOnPerClick === 1){
        noOfRequestOnPerClick+=1;
        
        //send data to server for create a conversation
        await fetch(`/inbox/${id}`,{
          method: 'POST'
        })
        .then((data)=>data.json())
        .then((data)=>{
          console.log(data);
          location.reload();
        })
        .catch((err)=>{
          console.log(err);
          noOfRequestOnPerClick = 1 ;
        })
        
      }
    }

    //conversation event handler
    function conversation(id){

      //set conversationId value
      conversationId = id ;
      //set conversation un Active and active
      const conversationList = document.querySelectorAll(`.conversation`);
      
      conversationList.forEach((value)=>{
        value.classList.contains(`conversation-${id}`) ? value.classList.add('active') : value.classList.remove('active');
      })

      console.log(id);
      chatForm.style.visibility = 'visible';
    }
    
    //socket.io create
    const server = io();
    //send message to server 

    chatForm.addEventListener('submit',async(e)=>{
      e.preventDefault();
      
      //decorate form data
      let formData = new FormData(chatForm);

      //inbox messages 
      if(conversationId){
        await fetch(`/inbox/messages/${conversationId}`,{
          method: 'POST',
          body : formData,
        })
          .then(response => response.json())
          .then(data => {
            console.log(data);
          })
          .catch((error) => {
            console.error('Error:', error);
          });
      }
      
    });

    //pass if have a conversationID
    if(conversationId){
      
    }
    
    </script>
  </body>
</html>
